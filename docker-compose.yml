version: "3.8"

services:
  # Our NestJS Api
  api:
    build:
      dockerfile: Dockerfile
      context: ./api
      # Only build development stage from Dockerfile
      target: development
    volumes:
      - ./api:/cuongnq/src/app
      - /cuongnq/src/app/node_modules/
    # RUN in debug mode: npm run start:debug --> Also start your vscode debugger
    # Run in dev mode: npm run start:dev
    command: npm run start:debug
    depends_on: 
      - postgres
    environment:
      DATABASE_URL: postgres://admin:admin@123@postgres:5432/bazar
      NODE_ENV: development
      JWT_SECRET: hard_to_guess_secret_12345678
      PORT: 3000
    ports:
      - 3000:3000
      - 9229:9229
  
  # Our Angular Frontend
  # frontend:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./frontend
  #     target: development
  #   command: npm run start
  #   volumes:
  #     - ./frontend:/thomas/frontend/src/app
  #     - /thomas/frontend/src/app/node_modules
  #   ports:
  #     - 4200:4200
  #   links:
  #     - api

  # Our Postgres Database for NestJS to connect to
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin@123
      POSTGRES_DB: bazar
    ports:
      - 35000:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  # The Postgres Admin tool if we want to run some custom queries and so on against our Database
  postgres_admin:
    image: dpage/pgadmin4
    depends_on: 
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin@123
    ports:
      - 5050:80
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin